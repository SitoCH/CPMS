// <auto-generated />
using System;
using CPMS.Common.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CPMS.Common.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180806221226_OrganizationalStructure")]
    partial class OrganizationalStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("CPMS.Common.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new { Id = 1, Name = "Compagnia 40" }
                    );
                });

            modelBuilder.Entity("CPMS.Common.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("SectionId");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Groups");

                    b.HasData(
                        new { Id = 1, Name = "Gruppo 1", SectionId = 1 },
                        new { Id = 2, Name = "Gruppo 2", SectionId = 1 }
                    );
                });

            modelBuilder.Entity("CPMS.Common.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Sections");

                    b.HasData(
                        new { Id = 1, CompanyId = 1, Name = "Sezione 1" }
                    );
                });

            modelBuilder.Entity("CPMS.Common.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<int>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CPMS.Common.Entities.Group", b =>
                {
                    b.HasOne("CPMS.Common.Entities.Section", "Section")
                        .WithMany("Groups")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CPMS.Common.Entities.Section", b =>
                {
                    b.HasOne("CPMS.Common.Entities.Company", "Company")
                        .WithMany("Sections")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CPMS.Common.Entities.User", b =>
                {
                    b.HasOne("CPMS.Common.Entities.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
